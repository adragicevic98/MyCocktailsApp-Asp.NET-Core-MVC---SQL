#pragma checksum "C:\Users\Administrator\Desktop\Jasna_projekt\MyCocktails_zadnjaverzija\MyCocktails_zadnjaverzija\MvcDemo\Views\Home\CocktailForm.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7f66f0b6d801e5599a259c27b389e30eed811e32"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_CocktailForm), @"mvc.1.0.view", @"/Views/Home/CocktailForm.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Administrator\Desktop\Jasna_projekt\MyCocktails_zadnjaverzija\MyCocktails_zadnjaverzija\MvcDemo\Views\_ViewImports.cshtml"
using MyCocktails;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Administrator\Desktop\Jasna_projekt\MyCocktails_zadnjaverzija\MyCocktails_zadnjaverzija\MvcDemo\Views\_ViewImports.cshtml"
using MyCocktails.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7f66f0b6d801e5599a259c27b389e30eed811e32", @"/Views/Home/CocktailForm.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1d30ab3eefc731db78045823bbd8bb8252f73beb", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_CocktailForm : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Administrator\Desktop\Jasna_projekt\MyCocktails_zadnjaverzija\MyCocktails_zadnjaverzija\MvcDemo\Views\Home\CocktailForm.cshtml"
  
    ViewData["Title"] = "CocktailForm";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"


<html>
<style>
    input[type=text],textarea,#slija {
        width: 100%;
        padding: 12px 20px;
        margin: 8px 0;
        display: inline-block;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
    }

    input[type=button] {
        width: 20%;
        background-color: #4CAF50;
        color: white;
        padding: 14px 20px;
        margin: 8px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        input[type=submit]:hover {
            background-color: #45a049;
        }

    #forma {
        border-radius: 5px;
        background-color: #f2f2f2;
        padding: 20px;
    }
    #komentar {
        width: 100%;
        height: 150px;
        padding: 12px 20px;
        box-sizing: border-box;
        border: 2px solid #ccc;
        border-radius: 4px;
        background-color: #f8f8f8;
        font-size: 16px;
        resize: none;
    }
    #cingredinets{
   ");
            WriteLiteral(@"     width: 70%;
        height: auto;
        padding: 12px 20px;
        box-sizing: border-box;
        border: 2px solid #ccc;
        border-radius: 4px;
        background-color: #f8f8f8;
        font-size: 16px;
        resize: none;
    }
    body {
        font-family: Arial, Helvetica, sans-serif;
    }
    label {
        color: #b30000;
        font-weight:bold;
    }

    /* The Modal (background) */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        color: #990000;
        font-weight: bold;
    }

    /* Modal Content */
   ");
            WriteLiteral(@" .modal-content {
        background-color: #fefefe;
        margin: auto;
        padding: 20px;
        border: 1px solid #888;
        width: 40%;
    }

    /* The Close Button */
    .close {
        color: #aaaaaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }
    
</style>

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f66f0b6d801e5599a259c27b389e30eed811e326432", async() => {
                WriteLiteral("\r\n\r\n    <h3 style=\"color:#b30000;\"><b>Save your comment</b></h3>\r\n\r\n    <div id=\"forma\">\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7f66f0b6d801e5599a259c27b389e30eed811e326798", async() => {
                    WriteLiteral(@"
            <label for=""cname"">Cocktail Name</label>
            <input type=""text"" id=""cname"">
            <div id=""slija"">
                <img id=""slika"" />
            </div>

            <label for=""ctype"">Type</label>
            <input type=""text"" id=""ctype"">
            <label for=""cinstructions"">Instructions</label>
            <textarea id=""cinstructions""></textarea>
            <label for=""cingredients"">Ingredients</label>
            <textarea id=""cingredients""></textarea>
            <textarea id=""komentar"" placeholder=""Your comment...""></textarea>

            <input type=""button"" id=""submit"" value=""Save"" ");
                    WriteLiteral(" /><input type=\"button\" id=\"leave\" value=\"Close\" onclick=\"zatvori()\" style=\"background-color:red;\"/>\r\n        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    </div>
    <div id=""myModal"" class=""modal"">

        <!-- Modal content -->
        <div class=""modal-content"">
            <span class=""close"">&times;</span>
            <p>Your comment has been successfully saved!</p>
        </div>

    </div>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    console.log(""tu je "");
    var cocktailId = localStorage.getItem(""IdCocktail"");
    document.getElementById(""cname"").value = cocktailId;
    console.log(cocktailId);

    var zahtjev = new XMLHttpRequest();
    var operacije;
   

    let sastojcii = new Array(15);
    let kolicinee = new Array(15);
    zahtjev.onreadystatechange = stanje;
    zahtjev.open('GET', `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${cocktailId} `, true)
    zahtjev.send();
    function stanje() {
        if (zahtjev.status == 200 && zahtjev.readyState == 4) {
            var odg = zahtjev.responseText;
            console.log(""Response:"" + odg);
            objekt = JSON.parse(odg);
            console.log(objekt);
            var nesto = objekt.drinks[0];
            console.log(nesto);
            var naziv = nesto.strDrink;
            console.log(naziv);
            var slika = nesto.strDrinkThumb;
            var opis = nesto.strInstructions;
            var vrsta = nesto.s");
            WriteLiteral(@"trAlcoholic;
            var sastojci = ""<b>Ingredients:</b>"" + ""<br>"";
            for (let i = 1; i < 16; i++) {
                var elemnt = `strIngredient${i}`;
                console.log(nesto[elemnt]);
                console.log(typeof (elemnt));
                console.log(nesto.elemnt);
                console.log(elemnt);
                console.log(nesto.strIngredient1);
                if (nesto[elemnt] != """" && nesto[elemnt] != null) {
                    sastojcii[i - 1] = nesto[elemnt];
                    kolicinee[i - 1] = nesto[`strMeasure${i}`];
                    sastojci += ""-"" + nesto[`strMeasure${i}`] + "" "" + nesto[elemnt] + ""<br>"";
                } else {
                    sastojcii[i - 1] = null;
                    kolicinee[i - 1] = null;
                }

            }
            console.log(sastojcii);
            console.log(kolicinee);
            document.getElementById(""cname"").value = naziv;
            document.getElementById(""cname"").disabled = ");
            WriteLiteral(@"true;
            document.getElementById(""slika"").src = slika;
            document.getElementById(""slika"").width = 200;
            document.getElementById(""slika"").height = 200;
            document.getElementById(""slika"").align = ""center"";
            document.getElementById(""ctype"").value = vrsta;
            document.getElementById(""ctype"").disabled = true;
            document.getElementById(""cingredients"").value = """";
            for (i = 0; i < sastojcii.length; i++) {
                if (kolicinee[i] != null) {
                    document.getElementById(""cingredients"").value += kolicinee[i] + sastojcii[i] + ""\n"";
                }

            }
            document.getElementById(""cingredients"").disabled = true;
            document.getElementById(""cinstructions"").value = opis;
            document.getElementById(""cinstructions"").disabled = true;
            operacije = localStorage.getItem(""uredi"");
            if (operacije == ""da"") {
                var idcoc = localStorage.g");
            WriteLiteral(@"etItem(""IdCocktail"");
                axios.get(`/api/usercocktail/${idcoc}`).then(response => document.getElementById(""komentar"").value=(response.data.comment));

            }
        }
    }
    function zatvori() {
        location.replace(localStorage.getItem(""natrag""));
    }
    function postavi() {
       

    }
    var modal = document.getElementById(""myModal"");

    // Get the button that opens the modal
    var btn = document.getElementById(""submit"");

    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName(""close"")[0];

    // When the user clicks the button, open the modal 
    btn.onclick = function(){
        operacije = localStorage.getItem(""uredi"");
        if (operacije == ""ne"") {
            axios.post('/api/usercocktail/savecourse11', {
                ""id_user"": parseInt(0),
                ""id_cocktail"": cocktailId,
                ""comment"": document.getElementById(""komentar"").value
            });
            //a");
            WriteLiteral(@"lert(""Your comment has been posted!"");
        } else if (operacije == ""da"") {
            var idcoc = localStorage.getItem(""IdCocktail"");
            console.log(""idcoc:"" + idcoc);

            let usCocktailEdit = {
                ""id_user"": 0,
                ""id_cocktail"": idcoc,
                ""comment"": document.getElementById(""komentar"").value
            }
            axios.put('/api/usercocktail/cocktailedit', usCocktailEdit);
        }
        setTimeout(funk, 200);
       

        modal.style.display = ""block"";
        function funk() {
            window.onclick = function (event) {
                if (event.target == modal) {
                    modal.style.display = ""none"";
                    location.replace(localStorage.getItem(""natrag""));
                }
            }
            span.onclick = function () {
                modal.style.display = ""none"";
                location.replace(localStorage.getItem(""natrag""));
            }
           
        }

  ");
            WriteLiteral("  }\r\n\r\n  \r\n    \r\n</script>\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
